<script src="/javascripts/js/xlsx.full.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>
<script>
  let base64String = "";
  let studentid = "";
  $(document).ready(function () {
    LoadTable();

    $(document).on("keyup", "#myInput", function () {
      searchTable();
    });

    function LoadTable() {
      var table = $("#dataTableVerifiedStudents").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 400,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/master_student/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
            <button id="edit-btn" class="btn text-primary" name="edit-btn" data-bs-toggle="modal" data-bs-target="#viewapplicationmodal"><i class="fas fa-fw fa-eye"></i></button>
          `;

              finalData.push({
                studentid: item.studentid,
                fullname: item.fullname,
                phone: item.phone,
                email: item.email,
                status: item.status,
                schoolname: item.schoolname,
                coursecode: item.coursecode,
                baranggay: item.baranggay,
                action: action,
              });
            });

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          { data: "studentid" },
          { data: "fullname" },
          { data: "phone" },
          { data: "email" },
          { data: "status" },
          { data: "schoolname" },
          { data: "coursecode" },
          { data: "baranggay" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          var StatusCell = $(row).find("td:eq(4)");
          var StatusText = data.status;
          var StatusClass = "";

          switch (StatusText.toLowerCase()) {
            case "verified":
              StatusClass = "regular-status";
              break;
            case "unverified":
              StatusClass = "probationary-status";
              break;
            default:
              StatusClass = "";
          }

          StatusCell.html(`<span class="${StatusClass}">${StatusText}</span>`);

          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },

        initComplete: function () {
          // Bind click events to sorting icons for ascending and descending sort
          $("#sort-asc").on("click", function () {
            table.order([0, "asc"]).draw(); // Sort by studentid ascending
          });

          $("#sort-desc").on("click", function () {
            table.order([0, "desc"]).draw(); // Sort by studentid descending
          });
        },
      });
    }

    // function LoadTable() {
    //   $("#dataTableVerifiedStudents").DataTable({
    //     destroy: true,
    //     processing: true,
    //     serverSide: true,
    //     paging: false,
    //     searching: false,
    //     info: false,
    //     scrollY: 400,
    //     scrollCollapse: true,
    //     serverMethod: "GET",
    //     ajax: {
    //       url: "/master_student/load",
    //       dataSrc: (json) => {
    //         var finalData = [];
    //         var data = json.data;

    //         $.each(data, (key, item) => {
    //           var action = "";
    //           var status = item.status;

    //           action = `
    //             <button id="edit-btn" class="btn text-primary" name="edit-btn" data-bs-toggle="modal" data-bs-target="#viewmodal"><i class="fas fa-fw fa-eye"></i></button>
    //            `;

    //           // var imgElement = document.createElement("img");
    //           // imgElement.src = "data:image/jpg;base64," + item.image;
    //           // imgElement.alt = "Profile Image";
    //           // imgElement.style.width = "90px";
    //           // imgElement.style.height = "90px";

    //           finalData.push({
    //             // image: imgElement.outerHTML,
    //             studentid: item.studentid,
    //             fullname: item.fullname,
    //             phone: item.phone,
    //             email: item.email,
    //             status: item.status,
    //             schoolname: item.schoolname,
    //             coursecode: item.coursecode,
    //             baranggay: item.baranggay,
    //             action: action,
    //           });
    //         });

    //         return finalData;
    //       },
    //     },
    //     columnDefs: [
    //       {
    //         targets: 1,
    //         className: "td-indent",
    //       },
    //     ],
    //     columns: [
    //       // { data: "image" },
    //       { data: "studentid" },
    //       { data: "fullname" },
    //       { data: "phone" },
    //       { data: "email" },
    //       { data: "status" },
    //       { data: "schoolname" },
    //       { data: "coursecode" },
    //       { data: "baranggay" },
    //       { data: "action" },
    //     ],
    //     createdRow: function (row, data, dataIndex) {
    //       //miyaka
    //       var StatusCell = $(row).find("td:eq(4)");

    //       var StatusText = data.status;

    //       var StatusClass = "";

    //       switch (StatusText.toLowerCase()) {
    //         case "Verified":
    //            StatusClass = "regular-status";
    //           break;
    //         case "UnVerified":
    //           StatusClass = "probationary-status";
    //           break;
    //         default:
    //           StatusClass = "";
    //       }

    //       StatusCell.html(
    //         `<span class="${StatusClass}">${StatusText}</span>`
    //       );

    //       $("td", row).each(function (index) {
    //         this.style.textAlign = "center";
    //         this.style.verticalAlign = "middle";
    //       });
    //     },

    //     initComplete: function () {},
    //   });
    // }

    $("#dataTableVerifiedStudents tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      studentid = dataRow[0];
      console.log(dataRow);
    });

    $(document).on("click", "#edit-btn", function () {
      $.ajax({
        type: "POST",
        url: "/master_student/getstudents",
        data: {
          studentid: studentid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#editpreview").attr(
                "src",
                "data:image/jpg;base64," + item.image
              );
              $("#dateregisteredreq").text(item.registerdate);
              $("#applicantid").text(item.studentid);
              $("#schoolyear").text(item.scholarname);
              $("#cityreq").text(item.city);
              $("#barranggayreq").text(item.baranggay);
              $("#villagepurokreq").text(item.village);
              $("#streetreq").text(item.street);
              $("#fullnamereq").text(item.fullname);
              $("#emailreq").text(item.email);
              $("#dobreq").text(item.date_of_birth);
              $("#birthplacereq").text(item.birthplace);
              $("#phonereq").text(item.phone);
              $("#schholenamereq").text(item.institutionid);
              $("#coursereq").text(item.courseid);
              $("#acadstatusreq").text(item.academic_status);
              $("#agereq").text(item.age);
              $("#statusreq").text(item.status);
              $("#fathersnamereq").text(item.fathers_name);
              $("#fathersoccupationreq").text(item.fathers_occupation);
              $("#mothersnamereq").text(item.mothers_name);
              $("#mothersoccupationreq").text(item.mothers_occupation);
              $("#truecopypreview").attr(
                "src",
                "data:image/jpg;base64," + item.grade_copy
              );
              $("#regformpreview").attr(
                "src",
                "data:image/jpg;base64," + item.registration_form
              );
              $("#certrespreview").attr(
                "src",
                "data:image/jpg;base64," + item.certificate_residency
              );
              $("#itipreview").attr("src", "data:image/jpg;base64," + item.itr);
              $("#nfipreview").attr("src", "data:image/jpg;base64," + item.nfi);

              function handleFileButtons(
                base64String,
                downloadButtonId,
                previewId,
                previewButtonId,
                fileName
              ) {
                const fileHeader = base64String.substring(0, 10);
                let fileType = "";
                let blobType = "";
                let fileExtension = "";

                if (fileHeader.includes("JVBER")) {
                  // PDF file
                  fileType = "pdf";
                  blobType = "application/pdf";
                  fileExtension = ".pdf";
                } else if (fileHeader.includes("/9j/4")) {
                  // JPEG file
                  fileType = "image/jpeg";
                  blobType = "image/jpeg";
                  fileExtension = ".jpg";
                } else if (fileHeader.includes("iVBORw0KG")) {
                  // PNG file
                  fileType = "image/png";
                  blobType = "image/png";
                  fileExtension = ".png";
                }

                if (fileType && blobType) {
                  const byteCharacters = atob(base64String);
                  const byteNumbers = new Array(byteCharacters.length);
                  for (let i = 0; i < byteCharacters.length; i++) {
                    byteNumbers[i] = byteCharacters.charCodeAt(i);
                  }
                  const byteArray = new Uint8Array(byteNumbers);
                  const blob = new Blob([byteArray], { type: blobType });
                  const downloadLink = URL.createObjectURL(blob);

                  // Set the preview image and download link
                  if (fileType.startsWith("image")) {
                    $(`#${previewId}`).attr("src", downloadLink);
                    $(`#${previewId}`).show();
                  } else if (fileType === "application/pdf") {
                    $(`#${previewId}`).attr(
                      "src",
                      "https://via.placeholder.com/250?text=PDF"
                    ); // Placeholder for PDF
                    $(`#${previewId}`).hide(); // Hide the preview image for PDF
                  }

                  $(`#${downloadButtonId}`)
                    .attr("href", downloadLink)
                    .attr("download", `${fileName}${fileExtension}`)
                    .show();

                  // Handle preview button click
                  $(`#${previewButtonId}`)
                    .on("click", function () {
                      window.open(downloadLink, "_blank");
                    })
                    .show();
                }
              }

              // Apply the function to each file preview and button
              handleFileButtons(
                item.grade_copy,
                "downloadTrueCopy",
                "truecopypreview",
                "previewTrueCopy",
                "TrueCopy"
              );
              handleFileButtons(
                item.registration_form,
                "downloadRegForm",
                "regformpreview",
                "previewRegForm",
                "RegistrationForm"
              );
              handleFileButtons(
                item.certificate_residency,
                "downloadCertRes",
                "certrespreview",
                "previewCertRes",
                "CertificateOfResidency"
              );
              handleFileButtons(
                item.itr,
                "downloadItr",
                "itipreview",
                "previewItr",
                "IncomeTaxReturn"
              );
              handleFileButtons(
                item.nfi,
                "downloadNfi",
                "nfipreview",
                "previewNfi",
                "AffidavitOfNoFixIncome"
              );
            });
          } else {
            swal("Error fetching employee data", message, "error");
          }
        },
        error: function (err) {
          swal(
            "An error occurred while fetching employee data",
            message,
            "error"
          );
        },
      });
    });

    function searchTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInput");
      filter = input.value.toUpperCase();
      table = document.getElementById("dataTableVerifiedStudents");
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
          }
        }
        if (found) {
          tr[i].style.display = "";
          found = false;
        } else {
          tr[i].style.display = "none";
        }
      }
    }
  });
</script>
