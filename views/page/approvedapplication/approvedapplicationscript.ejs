<script>
    let institutionsid = "";
    let base64String = "";
    let studentid = "";

    $(document).ready(function () {
        LoadTable();
        searchTable();
        //LoadBarrangay();
        LoadSchoolYear();
        LoadPerMonth();

        $(document).on("keyup", "#myInput", function () {
            searchTable();
        });

        function LoadTable() {
            $("#dataTableApprovedApplications").DataTable({
                destroy: true,
                processing: true,
                serverSide: true,
                paging: false,
                searching: false,
                info: false,
                scrollY: 600,
                scrollCollapse: true,
                serverMethod: "GET",
                ajax: {
                    url: "/approvedapplication/load",
                    dataSrc: (json) => {
                        var finalData = [];
                        var data = json.data;

                        $.each(data, (key, item) => {
                            var action = "";
                            var status = item.status;

                            action = `
                        <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#viewapplicationmodal"><i class="fas fa-fw fa-pen"></i></button>
                       `;

                            var imgElement = document.createElement("img");
                            imgElement.src = "data:image/jpg;base64," + item.image;
                            imgElement.alt = "Profile Image";
                            imgElement.style.width = "90px";
                            imgElement.style.height = "90px";

                            finalData.push({
                                image: imgElement.outerHTML,
                                studentid: item.studentid,
                                fullname: item.fullname,
                                institutionid: item.institutionid,
                                courseid: item.courseid,
                                city: item.city,
                                baranggay: item.baranggay,
                                academicstatus: item.academic_status,
                                yearlevel: item.yearlevel,
                                phone: item.phone,
                                action: action,
                            });
                        });

                        return finalData;
                    },
                },
                columnDefs: [
                    {
                        targets: 1,
                        className: "td-indent",
                    },
                ],
                columns: [
                    { data: "image" },
                    { data: "studentid" },
                    { data: "fullname" },
                    { data: "institutionid" },
                    { data: "courseid" },
                    { data: "city" },
                    { data: "baranggay" },
                    { data: "academicstatus" },
                    { data: "yearlevel" },
                    { data: "phone" },
                    { data: "action" }
                ],
                createdRow: function (row, data, dataIndex) {
                    $("td", row).each(function (index) {
                        this.style.textAlign = "center";
                        this.style.verticalAlign = "middle";
                    });
                },

                initComplete: function () { },
            });
        }

        $("#instphone").inputmask({
            mask: "+63 999 9999 9999",
            placeholder: " ",
            showMaskOnHover: false,
            showMaskOnFocus: true,
            definitions: {
                9: {
                    validator: "[0-9]",
                    cardinality: 1,
                    casing: "lower",
                },
            },
            onBeforePaste: function (pastedValue, opts) {
                if (pastedValue.startsWith("09")) {
                    return pastedValue.substring(1);
                }
                return pastedValue;
            },
            oncomplete: function () {
                let inputValue = $("#instphone").val();
                if (inputValue.includes("09")) {
                    $("#instphone").val(inputValue.replace("09", "9"));
                }
            },
        });

        function LoadSchoolYear() {
            $.ajax({
                type: "GET",
                url: "/scholarship/load",
                success: function (result) {
                    var data = result.data;
                    console.log(data);


                    $.each(data, function (key, item) {
                        var options = new Option(item.scholarship_id, item.scholarship_id);
                        $(options).html(item.name);
                        $("#selectSchoolYear").append(options);
                    });
                },
                error: function (result) {
                    alert("error: " + result.data);
                },
            });
        }


        // function LoadBarrangay() {
        //     $.ajax({
        //         type: "GET",
        //         url: "/pendingapplication/barranggaydistinct",
        //         success: function (result) {
        //             var data = result.data;
        //             console.log(data);


        //             $.each(data, function (key, item) {
        //                 var options = new Option(item.baranggay, item.baranggay);
        //                 $(options).html(item.baranggay);
        //                 $("#selectBaranggay").append(options);
        //             });
        //         },
        //         error: function (result) {
        //             alert("error: " + result.data);
        //         },
        //     });
        // }


        function LoadPerMonth() {
            $.ajax({
                type: "GET",
                url: "/approvedapplication/loadpermonth",
                success: function (result) {
                    var data = result.data;
                    console.log(data);


                    $.each(data, function (key, item) {
                        var options = new Option(item.register_month, item.register_month);
                        $(options).html(item.register_month);
                        $("#selectBaranggay").append(options);
                    });
                },
                error: function (result) {
                    alert("error: " + result.data);
                },
            });
        }

        $(document).on("click", "#exportpendingapplication", function () {
            let month = $("#selectBaranggay").val();
            let scholarship_id = $("#selectSchoolYear").val();

            let message = "";

            if (!month) {
                message += "Month is required. ";
            }

            if (!scholarship_id) {
                message += "Scholarship School Year is required. ";
            }

            if (message) {
                swal("Validation Error", message, "error");
            } else {
                $.ajax({
                    type: "POST",
                    url: "/approvedapplication/export",
                    data: {
                        month: month,
                        schoolyear: scholarship_id,
                    },
                    xhrFields: {
                        responseType: 'blob' // Set the response type to 'blob' for file download
                    },
                    success: function (blob, status, xhr) {
                        // Check if the response is empty (no data)
                        if (blob.size === 0) {
                            swal("No Available Data", "No data available for the selected school year.", "info");
                        } else {
                            const downloadUrl = window.URL.createObjectURL(blob);
                            const a = document.createElement('a');
                            a.href = downloadUrl;

                            // Extract filename from Content-Disposition header
                            const disposition = xhr.getResponseHeader('Content-Disposition');
                            const filename = disposition.split('filename=')[1].replace(/"/g, '');
                            a.download = filename;

                            document.body.appendChild(a);
                            a.click();
                            a.remove();
                            window.URL.revokeObjectURL(downloadUrl);

                            swal({
                                title: "Export Successful",
                                text: "The file has been exported successfully!",
                                icon: "success",
                                button: "OK!",
                            }).then(() => {
                                window.location.reload();
                            });
                        }
                    },
                    error: function (err) {
                        swal("Error", "No data available for the selected school year.", "error");
                    }
                });
            }
        });


        $("#dataTableApprovedApplications tbody").on("click", "tr", function () {
            var dataRow = [];
            $(this)
                .closest("tr")
                .find("td")
                .each(function () {
                    dataRow.push($(this).text());
                });
            studentid = dataRow[1];
            console.log(dataRow);
        });

        $(document).on("click", "#editBtn", function () {
            $.ajax({
                type: "POST",
                url: "/approvedapplication/loadstudentrequest",
                data: {
                    studentid: studentid,
                },
                success: function (result) {
                    if (result.msg === "success") {
                        const existingData = result.data;

                        $.each(existingData, (key, item) => {
                            $("#editpreview").attr("src", "data:image/jpg;base64," + item.image);
                            $("#dateregisteredreq").text(item.registerdate);
                            $("#applicantid").text(item.studentid);
                            $("#schoolyear").text(item.scholarname);
                            $("#cityreq").text(item.city);
                            $("#barranggayreq").text(item.baranggay);
                            $("#villagepurokreq").text(item.village);
                            $("#streetreq").text(item.street);
                            $("#fullnamereq").text(item.fullname);
                            $("#emailreq").text(item.email);
                            $("#dobreq").text(item.date_of_birth);
                            $("#birthplacereq").text(item.birthplace);
                            $("#phonereq").text(item.phone);
                            $("#schholenamereq").text(item.schoolname);
                            $("#coursereq").text(item.course_code);
                            $("#acadstatusreq").text(item.academic_status);
                            $("#agereq").text(item.age);
                            $("#statusreq").text(item.status);
                            $("#fathersnamereq").text(item.fathers_name);
                            $("#fathersoccupationreq").text(item.fathers_occupation);
                            $("#mothersnamereq").text(item.mothers_name);
                            $("#mothersoccupationreq").text(item.mothers_occupation);
                            $("#truecopypreview").attr("src", "data:image/jpg;base64," + item.grade_copy);
                            $("#regformpreview").attr("src", "data:image/jpg;base64," + item.registration_form);
                            $("#certrespreview").attr("src", "data:image/jpg;base64," + item.certificate_residency);
                            $("#itipreview").attr("src", "data:image/jpg;base64," + item.itr);
                            $("#nfipreview").attr("src", "data:image/jpg;base64," + item.nfi);

                            function handleFileButtons(base64String, downloadButtonId, previewId, previewButtonId, fileName) {
                                const fileHeader = base64String.substring(0, 10);
                                let fileType = "";
                                let blobType = "";
                                let fileExtension = "";

                                if (fileHeader.includes("JVBER")) {
                                    // PDF file
                                    fileType = "pdf";
                                    blobType = "application/pdf";
                                    fileExtension = ".pdf";
                                } else if (fileHeader.includes("/9j/4")) {
                                    // JPEG file
                                    fileType = "image/jpeg";
                                    blobType = "image/jpeg";
                                    fileExtension = ".jpg";
                                } else if (fileHeader.includes("iVBORw0KG")) {
                                    // PNG file
                                    fileType = "image/png";
                                    blobType = "image/png";
                                    fileExtension = ".png";
                                }

                                if (fileType && blobType) {
                                    const byteCharacters = atob(base64String);
                                    const byteNumbers = new Array(byteCharacters.length);
                                    for (let i = 0; i < byteCharacters.length; i++) {
                                        byteNumbers[i] = byteCharacters.charCodeAt(i);
                                    }
                                    const byteArray = new Uint8Array(byteNumbers);
                                    const blob = new Blob([byteArray], { type: blobType });
                                    const downloadLink = URL.createObjectURL(blob);

                                    // Set the preview image and download link
                                    if (fileType.startsWith("image")) {
                                        $(`#${previewId}`).attr("src", downloadLink);
                                        $(`#${previewId}`).show();
                                    } else if (fileType === "application/pdf") {
                                        $(`#${previewId}`).attr("src", "https://via.placeholder.com/250?text=PDF"); // Placeholder for PDF
                                        $(`#${previewId}`).hide(); // Hide the preview image for PDF
                                    }

                                    $(`#${downloadButtonId}`).attr("href", downloadLink).attr("download", `${fileName}${fileExtension}`).show();

                                    // Handle preview button click
                                    $(`#${previewButtonId}`).on("click", function () {
                                        window.open(downloadLink, '_blank');
                                    }).show();
                                }
                            }

                            // Apply the function to each file preview and button
                            handleFileButtons(item.grade_copy, "downloadTrueCopy", "truecopypreview", "previewTrueCopy", "TrueCopy");
                            handleFileButtons(item.registration_form, "downloadRegForm", "regformpreview", "previewRegForm", "RegistrationForm");
                            handleFileButtons(item.certificate_residency, "downloadCertRes", "certrespreview", "previewCertRes", "CertificateOfResidency");
                            handleFileButtons(item.itr, "downloadItr", "itipreview", "previewItr", "IncomeTaxReturn");
                            handleFileButtons(item.nfi, "downloadNfi", "nfipreview", "previewNfi", "AffidavitOfNoFixIncome");



                        });
                    } else {
                        swal("Error fetching employee data", message, "error");
                    }
                },
                error: function (err) {
                    swal(
                        "An error occurred while fetching employee data",
                        message,
                        "error"
                    );
                },
            });
        });

        $(document).on("change", "#announcementimage", function (e) {
            const input = document.getElementById("announcementimage");
            const file = input.files[0];

            const reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onloadend = function () {
                const preview = document.getElementById("preview");
                preview.src = reader.result;
            };
            imageUploaded();
        });

        function imageUploaded() {
            const input = document.getElementById("announcementimage");
            const file = input.files[0];

            var reader = new FileReader();

            reader.onload = function () {
                base64String = reader.result.replace("data:", "").replace(/^.+,/, "");

                imageBase64Stringsep = base64String;
            };
            reader.readAsDataURL(file);
        }

        $(document).on("change", "#editannouncementimage", function (e) {
            const input = document.getElementById("editannouncementimage");
            const file = input.files[0];

            const reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onloadend = function () {
                const preview = document.getElementById("editpreview");
                preview.src = reader.result;
            };
            editimage();
        });

        function editimage() {
            const input = document.getElementById("editannouncementimage");
            const file = input.files[0];

            var reader = new FileReader();

            reader.onload = function () {
                base64String = reader.result.replace("data:", "").replace(/^.+,/, "");

                imageBase64Stringsep = base64String;
            };
            reader.readAsDataURL(file);
        }

        function searchTable() {
            var input, filter, found, table, tr, td, i, j;
            input = document.getElementById("myInput");
            filter = input.value.toUpperCase();
            table = document.getElementById("dataTableApprovedApplications");
            tr = table.getElementsByTagName("tr");
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td");
                for (j = 0; j < td.length; j++) {
                    if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
                        found = true;
                    }
                }
                if (found) {
                    tr[i].style.display = "";
                    found = false;
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    });
</script>