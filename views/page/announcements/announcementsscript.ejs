<script>
  let bulletinid = "";
  let base64String = "";

  $(document).ready(function () {
    LoadTable();
    searchTable();

    $(document).on("keyup", "#myInput", function () {
      searchTable();
    });

    function LoadTable() {
      $("#dataTableannouncement").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 600,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/announcements/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
                    <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#editannouncementmodal"><i class="fas fa-fw fa-pen"></i></button>
                   `;

              var imgElement = document.createElement("img");
              imgElement.src = "data:image/jpg;base64," + item.image;
              imgElement.alt = "Profile Image";
              imgElement.style.width = "80px";
              imgElement.style.height = "80px";

              finalData.push({
                image: imgElement.outerHTML,
                announcementsid: item.announcementsid,
                tittle: item.tittle,
                type: item.type,
                targerdate: item.targerdate,
                createby: item.createby,
                createdate: item.createdate,
                status: item.status,
                action: action,
              });
            });

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          { data: "image" },
          { data: "announcementsid" },
          { data: "tittle" },
          { data: "type" },
          { data: "targerdate" },
          { data: "createby" },
          { data: "createdate" },
          { data: "status" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          //miyaka
          var statusCell = $(row).find("td:eq(7)");

          var statusText = data.status;

          var statusClass = "";

          switch (statusText.toLowerCase()) {
            case "active":
              statusClass = "active-status";
              break;
            case "inactive":
              statusClass = "inactive-status";
              break;
            default:
              statusClass = "";
          }

          statusCell.html(`<span class="${statusClass}">${statusText}</span>`);

          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },

        initComplete: function () {},
      });
    }

    $("#announcementdescription").summernote({
      placeholder: "Enter the description here...",
      tabsize: 2,
      height: 200,
      toolbar: [
        ["style", ["style"]],
        ["font", ["bold", "italic", "underline", "clear"]],
        ["fontname", ["fontname"]],
        ["color", ["color"]],
        ["para", ["ul", "ol", "paragraph"]],
        ["table", ["table"]],
        ["insert", ["link", "picture", "video"]],
        ["view", ["fullscreen", "codeview", "help"]],
        ["custom", ["responsive"]],
      ],
      buttons: {
        responsive: function (context) {
          var ui = $.summernote.ui;
          var button = ui.button({
            contents: '<i class="fa fa-mobile"></i> Responsive',
            tooltip: "Add responsive styles",
            click: function () {
              var currentContent = context.invoke("code");
              var responsiveContent = `<div class="responsive">${currentContent}</div>`;
              context.invoke("code", responsiveContent);
            },
          });
          return button.render();
        },
      },
    });

    $(document).on("click", "#announcementsavebtn", function () {
      let image = base64String;
      let tittle = $("#announcementtittle").val();
      let type = $("#announcementtype").val();
      let targetdate = $("#targetdate").val();
      let enddate = $("#enddate").val();
      let description = $("#announcementdescription").summernote("code"); // Capture the HTML content

      var message = "";

      if (image == "") {
        message += "DESCRIPTION ";
      }

      if (tittle == "") {
        message += "DESCRIPTION ";
      }

      if (type == "") {
        message += "TITTLE ";
      }

      if (enddate == "") {
        message += "TITTLE ";
      }

      if (targetdate == "") {
        message += "TITTLE ";
      }

      if (description == "") {
        message += "TITTLE ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "/announcements/save",
          data: {
            image: image,
            tittle: tittle,
            type: type,
            targetdate: targetdate,
            enddate: enddate,
            description: description, // Send the HTML content
          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Saved Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              }).then((results) => {
                window.location.reload();
              });
              LoadTable();
            } else {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              });
            }
          },
          error: function (err) {
            swal("Data already exist!", "You clicked the button!", "warning");
          },
        });
      }
    });

    $("#dataTableannouncement tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      bulletinid = dataRow[1];
    });

    $(document).on("click", "#editBtn", function () {
      $.ajax({
        type: "POST",
        url: "/announcements/getannouncement",
        data: {
          bulletinid: bulletinid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#editannouncementtittle").val(item.tittle);
              $("#editpreview").attr(
                "src",
                "data:image/jpg;base64," + item.image
              );
              $("#editannouncementdescription").summernote(
                "code",
                item.description
              ); // Load the description into Summernote
              $("#editannouncementstatus").val(item.status);
              $("#editannouncementtype").val(item.type);
              $("#edittargetdate").val(item.targetdate);
              $("#editenddate").val(item.enddate);
              base64String = item.image;
            });
          } else {
            swal("Error fetching employee data", result.msg, "error");
          }
        },
        error: function (err) {
          swal(
            "An error occurred while fetching employee data",
            err.message,
            "error"
          );
        },
      });
    });

    $("#editannouncementdescription").summernote({
      placeholder: "Enter the description here...",
      tabsize: 2,
      height: 200,
      toolbar: [
        ["style", ["style"]],
        ["font", ["bold", "italic", "underline", "clear"]],
        ["fontname", ["fontname"]],
        ["color", ["color"]],
        ["para", ["ul", "ol", "paragraph"]],
        ["table", ["table"]],
        ["insert", ["link", "picture", "video"]],
        ["view", ["fullscreen", "codeview", "help"]],
        ["custom", ["responsive"]],
      ],
      buttons: {
        responsive: function (context) {
          var ui = $.summernote.ui;
          var button = ui.button({
            contents: '<i class="fa fa-mobile"></i> Responsive',
            tooltip: "Add responsive styles",
            click: function () {
              var currentContent = context.invoke("code");
              var responsiveContent = `<div class="responsive">${currentContent}</div>`;
              context.invoke("code", responsiveContent);
            },
          });
          return button.render();
        },
      },
    });

    $(document).on("click", "#editannouncementsavebtn", function () {
      let id = bulletinid;
      let tittle = $("#editannouncementtittle").val();
      let description = $("#editannouncementdescription").summernote("code");
      let status = $("#editannouncementstatus").val();
      let type = $("#editannouncementtype").val();
      let targetdate = $("#edittargetdate").val();
      let enddate = $("#editenddate").val();
      let image = base64String;

      var message = "";

      if (image === "") {
        message += "image is required. ";
      }

      if (tittle === "") {
        message += "tittle is required. ";
      }

      if (description === "") {
        message += "description is required. ";
      }

      if (status === "") {
        message += "status is required. ";
      }

      if (type === "") {
        message += "type is required. ";
      }

      if (targetdate === "") {
        message += "targetdate is required. ";
      }

      if (enddate === "") {
        message += "enddate is required. ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "PUT",
          url: "/announcements/edit",
          data: {
            bulletinid: id,
            image: image,
            tittle: tittle,
            type: type,
            targetdate: targetdate,
            enddate: enddate,
            description: description,
            status: status,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Update Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              }).then((results) => {
                window.location.reload();
              });
              LoadTable();
            } else if (result.msg == "exist") {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              });
            } else {
              swal(
                "Data already exists!",
                "You clicked the button!",
                "warning"
              );
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });

    $(document).on("change", "#announcementimage", function (e) {
      const input = document.getElementById("announcementimage");
      const file = input.files[0];

      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onloadend = function () {
        const preview = document.getElementById("preview");
        preview.src = reader.result;
      };
      imageUploaded();
    });

    function imageUploaded() {
      const input = document.getElementById("announcementimage");
      const file = input.files[0];

      var reader = new FileReader();

      reader.onload = function () {
        base64String = reader.result.replace("data:", "").replace(/^.+,/, "");

        imageBase64Stringsep = base64String;
      };
      reader.readAsDataURL(file);
    }

    $(document).on("change", "#editannouncementimage", function (e) {
      const input = document.getElementById("editannouncementimage");
      const file = input.files[0];

      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onloadend = function () {
        const preview = document.getElementById("editpreview");
        preview.src = reader.result;
      };
      editimage();
    });

    function editimage() {
      const input = document.getElementById("editannouncementimage");
      const file = input.files[0];

      var reader = new FileReader();

      reader.onload = function () {
        base64String = reader.result.replace("data:", "").replace(/^.+,/, "");

        imageBase64Stringsep = base64String;
      };
      reader.readAsDataURL(file);
    }

    function searchTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInput");
      filter = input.value.toUpperCase();
      table = document.getElementById("dataTableannouncement");
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
          }
        }
        if (found) {
          tr[i].style.display = "";
          found = false;
        } else {
          tr[i].style.display = "none";
        }
      }
    }
  });
</script>
