<script>
  let questionid = "";
  let base64String = "";
  let currentPassword = "";

  $(document).ready(function () {
    LoadTable();
    searchTable();
    //LoadAccess();
    //EditLoadAccess();

    $(document).on("keyup", "#myInput", function () {
      searchTable();
    });

    function LoadTable() {
      $("#dataTableQuestions").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 600,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/questions/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
                      <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#editquestionsmodal"><i class="fas fa-fw fa-pen"></i></button>
                     `;


              finalData.push({
                questionid: item.questionid,
                description: item.description,
                responseid: item.responseid,
                createdate: item.createdate,
                createby: item.createby,
                action: action,
              });
            });

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          { data: "questionid" },
          { data: "description" },
          { data: "responseid" },
          { data: "createdate" },
          { data: "createby" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },
        initComplete: function () { },
      });
    }

    function LoadAccess() {
      $.ajax({
        type: "GET",
        url: "/access/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.accessid, item.accessid);
            $(options).html(item.accessname);
            $("#accesstype").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    $(document).on("click", "#addquestionSaveBtn", function () {
      let question = $("#questions").val();
      let response = $("#responses").val();

      var message = "";

      if (question == "") {
        message += "Question is required. ";
      }

      if (response == "") {
        message += "Response is required. ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "/questions/save",
          data: {
            question: question,
            response: response,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Saved Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              }).then((results) => {
                window.location.reload();
              });
              LoadTable();
            } else {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              });
            }
          },
          error: function (err) {
            swal("Data already exists!", "You clicked the button!", "warning");
          },
        });
      }
    });

    $("#dataTableQuestions tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      questionid = dataRow[0];
      console.log(dataRow);
    });


    $(document).on("click", "#editBtn", function () {
      $.ajax({
        type: "POST",
        url: "/questions/getquestions",
        data: {
          questionid: questionid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#editquestions").val(item.description);
              $("#editresponses").val(item.answer);
            });

            console.log(currentPassword, "currentPassword");
          } else {
            swal("Error fetching employee data", message, "error");
          }
        },
        error: function (err) {
          swal(
            "An error occurred while fetching employee data",
            message,
            "error"
          );
        },
      });
    });

    $(document).on("click", "#editquestionSaveBtn", function () {
      let id = questionid;
      let questiontext = $("#editquestions").val();
      let questionanswer = $("#editresponses").val();

      var message = "";

      if (questiontext === "") {
        message += "Question is required. ";
      }

      if (questionanswer === "") {
        message += "Answer is required. ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "PUT",
          url: "/questions/edit",
          data: {
            questionid: questionid,
            questiontext: questiontext,
            questionanswer: questionanswer,
          },
          success: function (result) {
            if (result.msg === "success") {
              swal({
                title: "Update Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              }).then((results) => {
                window.location.reload();
              });
              LoadTable();
            } else if (result.msg === "exist") {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              });
            } else {
              swal(
                "Data already exists!",
                "You clicked the button!",
                "warning"
              );
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });


    $(document).on("click", "#addquestionDeleteBtn", function () {

      swal({
        title: "Are you sure?",
        text: "Once deleted, you will not be able to recover this question!",
        icon: "warning",
        buttons: true,
        dangerMode: true,
      }).then((willDelete) => {
        if (willDelete) {
          $.ajax({
            type: "DELETE",
            url: "/questions/delete", 
            contentType: "application/json",
            data: JSON.stringify({ questionid: questionid }), 
            success: function (result) {
              swal("Deleted!", result.msg, "success")
                .then(() => {
                  window.location.reload(); // Reload the page or update the UI as necessary
                });
            },
            error: function (err) {
              swal("Error", err.responseJSON.msg || "An error occurred while deleting.", "error");
            },
          });
        } else {
          swal("Your question is safe!");
        }
      });
    });

    function searchTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInput");
      filter = input.value.toUpperCase();
      table = document.getElementById("dataTableQuestions");
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
          }
        }
        if (found) {
          tr[i].style.display = "";
          found = false;
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    $(".toggle-password").on("click", function () {
      const targetSelector = $(this).data("target");
      const passwordInput = $(targetSelector);
      const passwordFieldType = passwordInput.attr("type");
      if (passwordFieldType === "password") {
        passwordInput.attr("type", "text");
        $(this).find("i").removeClass("fa-eye").addClass("fa-eye-slash");
      } else {
        passwordInput.attr("type", "password");
        $(this).find("i").removeClass("fa-eye-slash").addClass("fa-eye");
      }
    });
  });
</script>